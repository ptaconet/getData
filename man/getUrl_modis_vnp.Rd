% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getUrl_modis_vnp.R
\name{getUrl_modis_vnp}
\alias{getUrl_modis_vnp}
\title{Query MODIS or VNP collections}
\usage{
getUrl_modis_vnp(timeRange, roi, collection, dimensions,
  modisTile = NULL, optionals_opendap = NULL, username = NULL,
  password = NULL, single_ncfile = TRUE)
}
\arguments{
\item{timeRange}{Date(s) of interest (single date or time frame) (see details)}

\item{roi}{sf POINT or POLYGON. Region of interest (EPSG 4326)}

\item{collection}{string. Collection of interest}

\item{dimensions}{string vector. Names of the dimensions to retrieve for the collection of interest}

\item{modisTile}{string. optional. The MODIS tile identifier}

\item{optionals_opendap}{list of optional arguments (see details). to retrieve outside the function to fasten the processing time}

\item{username}{string. EarthData username}

\item{password}{string. EarthData password}

\item{single_ncfile}{boolean. Get the data as a single netcdf file encompassing the whole time frame (TRUE) or as multiple files (1 for each time step) (FALSE). Default to TRUE}
}
\value{
a data.frame with one row for each dataset and 2 columns  :
 \itemize{
 \item{"time_start": }{Date or time start}
 \item{"url": }{URL of the dataset}
 }
}
\description{
This function enables to retrieve OPeNDAP URLs of MODIS or VNP products given a collection, a ROI, a time frame and a set of dimensions of interest.
}
\details{
Date(s) of interest (argument \code{timeRange}) must be provided either a single date (e.g. \code{as.Date("2017-01-01"))} or time frame provided with two bounding dates ( e.g. \code{as.Date(c("2010-01-01","2010-01-30"))})

Arguments \code{modisTile} and \code{optionals_opendap} are optional. These parameters are automatically calculated within the function if they are not provided. However, providing them optimizes the performances of the function (i.e. fasten the processing time).
It might be particularly useful to provide them if looping over the same ROI or dates is planned.
The parameters can be retrieved outside the function respectively with the functions \link[getRemoteData]{getMODIStileNames} and \link[getRemoteData]{getOpendapOptArguments_modis_vnp}.
}
\note{
\itemize{
\item{NB1 :}{Before downloading some data, users should check which MODIS/VNP collections have been implemented in the package, with the function \link[getRemoteData]{getAvailableDataSources}.}
\item{NB2 :}{Currently, downloading data over a ROI that covers multiple MODIS/VNP tiles is not enabled.}
\item{NB3 :}{The NASA/USGS OPeNDAP server where the MODIS and VNP data are extracted from is located here : https://opendap.cr.usgs.gov/opendap/hyrax}
}
}
\examples{

require(sf)
require(purrr)

# Identify which collections are available and get details about each one
coll_available<-getRemoteData::getAvailableDataSources() \%>\%
filter(source \%in\% c("MODIS","VNP"))

# Set credentials to EarthData servers
my.earthdata.username<-"username"
my.earthdata.pw<-"password"

# Set ROI and time range of interest
roi=sf::st_read(system.file("extdata/ROI_example.kml", package = "getRemoteData"),quiet=TRUE)
timeRange<-as.Date(c("2017-01-01","2017-01-30"))

# Retrieve the URLs to download MODIS LST Daily (MOD11A1.006) Day + Night bands (LST_Day_1km,LST_Night_1km)
\dontrun{
df_data_to_dl<-getRemoteData::getUrl_modis_vnp(
timeRange=timeRange,
roi=roi,
collection="MOD11A1.006",
dimensions=c("LST_Day_1km","LST_Night_1km"),
username=my.earthdata.username,
password=my.earthdata.pw
)

# Download the data
res_dl<-getRemoteData::downloadData(df_data_to_dl)

# Open the LST_Day_1km bands as a list of rasters
rasts_modis_lst_day<-purrr::map(res_dl$destfile,~getRemoteData::prepareData_modis_vnp(.,"LST_Day_1km")) \%>\%
purrr::set_names(res_dl$name)

}
}
\seealso{
Other getUrl: \code{\link{getUrl_era5}},
  \code{\link{getUrl_gpm}}, \code{\link{getUrl_imcce}},
  \code{\link{getUrl_smap}}, \code{\link{getUrl_srtm}},
  \code{\link{getUrl_tamsat}},
  \code{\link{getUrl_viirsDnb}}
}
\author{
Paul Taconet, IRD \email{paul.taconet@ird.fr}
}
\concept{getUrl}
